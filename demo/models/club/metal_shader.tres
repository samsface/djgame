[gd_resource type="Shader" format=3 uid="uid://cg43cfc5yi0ma"]

[resource]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.dev5's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform vec4 albedo2 : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_g, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_detail_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_detail_normal : hint_normal, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_detail_mask : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec2 detail_scale = vec2(1.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


uniform sampler2D color_pallet : hint_default_white, filter_linear_mipmap, repeat_enable, source_color;
uniform sampler2D texture_detail : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float edge_wear : hint_range(0.0, 1.0);
uniform float random_color_pallet : hint_range(0.0, 1.0);

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;

}

void fragment() {
	vec2 base_uv = UV;

	vec4 aoe_tex = texture(texture_ambient_occlusion, base_uv);
	vec4 detail_tex = texture(texture_detail, base_uv * detail_scale);

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = texture(color_pallet, vec2(mod(albedo_tex.b + (NODE_POSITION_WORLD.z + NODE_POSITION_WORLD.x) * random_color_pallet, 1.0))).rgb;

	float e = aoe_tex.g;
	e = round(e - edge_wear * 0.5);




	ALBEDO = mix(ALBEDO, albedo2.rgb, e);

	ALBEDO = mix(ALBEDO, albedo2.rgb, round(detail_tex.r - 0.04));


	METALLIC = metallic;
	SPECULAR = specular;
	ROUGHNESS = roughness;

	// Ambient Occlusion: Enabled
	AO = pow(aoe_tex.r, 1.0);
	AO_LIGHT_AFFECT = ao_light_affect;




}
"
